<!DOCTYPE html>
<!-- saved from url=(0077)http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/ -->
<html lang="en-US" prefix="og: http://ogp.me/ns#" class=" js"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script async="" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/async-ads.js"></script><script type="text/javascript" async="" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/cse.js"></script>

<meta name="viewport" content="width=device-width">
<meta name="description" content="A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.">
<link rel="shortcut icon" href="http://www.geeksforgeeks.org/gfg.png" type="image/x-icon">

<meta property="og:image" content="http://d1hyf4ir1gqw6c.cloudfront.net//wp-content/uploads/gfg_200X200.png">
<meta property="og:image:type" content="image/png">
<meta property="og:image:width" content="200">
<meta property="og:image:height" content="200">

<title>Dynamic Programming | Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks</title>
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php">
<!--[if lt IE 9]>
<script src="http://d1hyf4ir1gqw6c.cloudfront.net//wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>
<![endif]-->

<!-- This site is optimized with the Yoast SEO plugin v3.7.1 - https://yoast.com/wordpress/plugins/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="Dynamic Programming | Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks">
<meta property="og:description" content="Given weights and values of n items, put these items in a knapsack of capacity W to get the maximum total value in the knapsack. In other words, given two integer arrays val[0..n-1] and wt[0..n-1] which represent values and weights associated with n items respectively. Also given an integer W which represents knapsack capacity, find… Read More »">
<meta property="og:url" content="http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/">
<meta property="og:site_name" content="GeeksforGeeks">
<meta property="article:tag" content="Dynamic Programming">
<meta property="article:section" content="Dynamic Programming">
<meta property="article:published_time" content="2012-03-19T13:28:33+00:00">
<meta property="article:modified_time" content="2016-06-20T10:32:39+00:00">
<meta property="og:updated_time" content="2016-06-20T10:32:39+00:00">
<!-- / Yoast SEO plugin. -->

<link rel="dns-prefetch" href="http://fonts.googleapis.com/">
<link rel="dns-prefetch" href="http://s.w.org/">
<link rel="alternate" type="application/rss+xml" title="GeeksforGeeks » Feed" href="http://www.geeksforgeeks.org/feed/">
<link rel="alternate" type="application/rss+xml" title="GeeksforGeeks » Comments Feed" href="http://www.geeksforgeeks.org/comments/feed/">
<link rel="alternate" type="application/rss+xml" title="GeeksforGeeks » Dynamic Programming | Set 10 ( 0-1 Knapsack Problem) Comments Feed" href="http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/feed/">
		<script type="text/javascript" async="" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/ga.js"></script><script type="text/javascript" async="" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/cse.js"></script><script async="" type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/gpt.js"></script><script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/2\/svg\/","svgExt":".svg","source":{"concatemoji":"http:\/\/www.geeksforgeeks.org\/wp-includes\/js\/wp-emoji-release.min.js"}};
			!function(a,b,c){function d(a){var c,d,e,f,g,h=b.createElement("canvas"),i=h.getContext&&h.getContext("2d"),j=String.fromCharCode;if(!i||!i.fillText)return!1;switch(i.textBaseline="top",i.font="600 32px Arial",a){case"flag":return i.fillText(j(55356,56806,55356,56826),0,0),!(h.toDataURL().length<3e3)&&(i.clearRect(0,0,h.width,h.height),i.fillText(j(55356,57331,65039,8205,55356,57096),0,0),c=h.toDataURL(),i.clearRect(0,0,h.width,h.height),i.fillText(j(55356,57331,55356,57096),0,0),d=h.toDataURL(),c!==d);case"diversity":return i.fillText(j(55356,57221),0,0),e=i.getImageData(16,16,1,1).data,f=e[0]+","+e[1]+","+e[2]+","+e[3],i.fillText(j(55356,57221,55356,57343),0,0),e=i.getImageData(16,16,1,1).data,g=e[0]+","+e[1]+","+e[2]+","+e[3],f!==g;case"simple":return i.fillText(j(55357,56835),0,0),0!==i.getImageData(16,16,1,1).data[0];case"unicode8":return i.fillText(j(55356,57135),0,0),0!==i.getImageData(16,16,1,1).data[0];case"unicode9":return i.fillText(j(55358,56631),0,0),0!==i.getImageData(16,16,1,1).data[0]}return!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i;for(i=Array("simple","flag","unicode8","diversity","unicode9"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><script src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/wp-emoji-release.min.js" type="text/javascript"></script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel="stylesheet" id="themonic-fonts-css" href="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/css" type="text/css" media="all">
<link rel="stylesheet" id="themonic-style-css" href="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/style.css" type="text/css" media="all">
<!--[if lt IE 9]>
<link rel='stylesheet' id='themonic-ie-css'  href='http://d1hyf4ir1gqw6c.cloudfront.net//wp-content/themes/iconic-one/css/ie.css' type='text/css' media='all' />
<![endif]-->
<script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/jquery.js"></script>
<script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/jquery-migrate.min.js"></script>
<script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/gfg.js"></script>
<link rel="https://api.w.org/" href="http://www.geeksforgeeks.org/wp-json/">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.geeksforgeeks.org/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://d1hyf4ir1gqw6c.cloudfront.net//wp-includes/wlwmanifest.xml"> 
<meta name="generator" content="WordPress 4.6.1">
<link rel="shortlink" href="http://www.geeksforgeeks.org/?p=18430">
<link rel="alternate" type="application/json+oembed" href="http://www.geeksforgeeks.org/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.geeksforgeeks.org%2Fdynamic-programming-set-10-0-1-knapsack-problem%2F">
<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #ffffff; }
</style>
<link rel="stylesheet" type="text/css" href="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/shCore.css"><link rel="stylesheet" type="text/css" href="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/shThemeDefault.css"><style type="text/css" id="syntaxhighlighteranchor"></style>

<script type="text/javascript">
  var googletag = googletag || {};
  googletag.cmd = googletag.cmd || [];
  (function() {
    var gads = document.createElement('script');
    gads.async = true;
    gads.type = 'text/javascript';
    var useSSL = 'https:' == document.location.protocol;
    gads.src = (useSSL ? 'https:' : 'http:') +
      '//www.googletagservices.com/tag/js/gpt.js';
    var node = document.getElementsByTagName('script')[0];
    node.parentNode.insertBefore(gads, node);
  })();
</script>

<script type="text/javascript">
  googletag.cmd.push(function() {
    googletag.defineSlot('/27823234/SP', [300, 250], 'div-gpt-ad-1458112424022-0').addService(googletag.pubads());
    googletag.pubads().enableSingleRequest();
    googletag.enableServices();
  });
</script>
<script src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/pubads_impl_107.js" async=""></script><script src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/jsapi" type="text/javascript"></script><script src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/jsapi" type="text/javascript"></script><link type="text/css" href="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/default+en.css" rel="stylesheet"><link type="text/css" href="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/default.css" rel="stylesheet"><script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/default+en.I.js"></script><link type="text/css" href="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/default+en.css" rel="stylesheet"><link type="text/css" href="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/default.css" rel="stylesheet"><script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/default+en.I.js"></script><style type="text/css">
.gsc-control-cse {
font-family: Arial, sans-serif;
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-control-cse .gsc-table-result {
font-family: Arial, sans-serif;
}
input.gsc-input, .gsc-input-box, .gsc-input-box-hover, .gsc-input-box-focus {
border-color: #6AA84F;
}
input.gsc-search-button, input.gsc-search-button:hover, input.gsc-search-button:focus {
border-color: #000000;
background-color: #6AA84F;
background-image: none;
filter: none;
}
.gsc-tabHeader.gsc-tabhInactive {
border-color: #E9E9E9;
background-color: #E9E9E9;
}
.gsc-tabHeader.gsc-tabhActive {
border-color: #FF9900;
border-bottom-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-tabsArea {
border-color: #FF9900;
}
.gsc-webResult.gsc-result,
.gsc-results .gsc-imageResult {
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-webResult.gsc-result:hover,
.gsc-imageResult:hover {
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gs-webResult.gs-result a.gs-title:link,
.gs-webResult.gs-result a.gs-title:link b,
.gs-imageResult a.gs-title:link,
.gs-imageResult a.gs-title:link b {
color: #006600;
}
.gs-webResult.gs-result a.gs-title:visited,
.gs-webResult.gs-result a.gs-title:visited b,
.gs-imageResult a.gs-title:visited,
.gs-imageResult a.gs-title:visited b {
color: #EC4E20;
}
.gs-webResult.gs-result a.gs-title:hover,
.gs-webResult.gs-result a.gs-title:hover b,
.gs-imageResult a.gs-title:hover,
.gs-imageResult a.gs-title:hover b {
color: #CA7700;
}
.gs-webResult.gs-result a.gs-title:active,
.gs-webResult.gs-result a.gs-title:active b,
.gs-imageResult a.gs-title:active,
.gs-imageResult a.gs-title:active b {
color: #006600;
}
.gsc-cursor-page {
color: #006600;
}
a.gsc-trailing-more-results:link {
color: #006600;
}
.gs-webResult .gs-snippet,
.gs-imageResult .gs-snippet,
.gs-fileFormatType {
color: #000000;
}
.gs-webResult div.gs-visibleUrl,
.gs-imageResult div.gs-visibleUrl {
color: #008000;
}
.gs-webResult div.gs-visibleUrl-short {
color: #008000;
}
.gs-webResult div.gs-visibleUrl-short {
display: none;
}
.gs-webResult div.gs-visibleUrl-long {
display: block;
}
.gs-promotion div.gs-visibleUrl-short {
display: none;
}
.gs-promotion div.gs-visibleUrl-long {
display: block;
}
.gsc-cursor-box {
border-color: #FFFFFF;
}
.gsc-results .gsc-cursor-box .gsc-cursor-page {
border-color: #E9E9E9;
background-color: #FFFFFF;
color: #006600;
}
.gsc-results .gsc-cursor-box .gsc-cursor-current-page {
border-color: #FF9900;
background-color: #FFFFFF;
color: #EC4E20;
}
.gsc-webResult.gsc-result.gsc-promotion {
border-color: #336699;
background-color: #FFFFFF;
}
.gsc-completion-title {
color: #006600;
}
.gsc-completion-snippet {
color: #000000;
}
.gs-promotion a.gs-title:link,
.gs-promotion a.gs-title:link *,
.gs-promotion .gs-snippet a:link {
color: #006600;
}
.gs-promotion a.gs-title:visited,
.gs-promotion a.gs-title:visited *,
.gs-promotion .gs-snippet a:visited {
color: #EC4E20;
}
.gs-promotion a.gs-title:hover,
.gs-promotion a.gs-title:hover *,
.gs-promotion .gs-snippet a:hover {
color: #CA7700;
}
.gs-promotion a.gs-title:active,
.gs-promotion a.gs-title:active *,
.gs-promotion .gs-snippet a:active {
color: #006600;
}
.gs-promotion .gs-snippet,
.gs-promotion .gs-title .gs-promotion-title-right,
.gs-promotion .gs-title .gs-promotion-title-right * {
color: #000000;
}
.gs-promotion .gs-visibleUrl,
.gs-promotion .gs-visibleUrl-short {
color: #008000;
}</style><style type="text/css">.gscb_a{display:inline-block;font:27px/13px arial,sans-serif}.gsst_a .gscb_a{color:#a1b9ed;cursor:pointer}.gsst_a:hover .gscb_a,.gsst_a:focus .gscb_a{color:#36c}.gsst_a{display:inline-block}.gsst_a{cursor:pointer;padding:0 4px}.gsst_a:hover{text-decoration:none!important}.gsst_b{font-size:16px;padding:0 2px;position:relative;user-select:none;-webkit-user-select:none;white-space:nowrap}.gsst_e{opacity:0.55;}.gsst_a:hover .gsst_e,.gsst_a:focus .gsst_e{opacity:0.72;}.gsst_a:active .gsst_e{opacity:1;}.gsst_f{background:white;text-align:left}.gsst_g{background-color:white;border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.2);margin:-1px -3px;padding:0 6px}.gsst_h{background-color:white;height:1px;margin-bottom:-1px;position:relative;top:-1px}.gsib_a{width:100%;padding:4px 6px 0}.gsib_a,.gsib_b{vertical-align:top}.gssb_c{border:0;position:absolute;z-index:989}.gssb_e{border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.2);cursor:default}.gssb_f{visibility:hidden;white-space:nowrap}.gssb_k{border:0;display:block;position:absolute;top:0;z-index:988}.gsdd_a{border:none!important}.gsq_a{padding:0}.gscsep_a{display:none}.gssb_a{padding:0 7px}.gssb_a,.gssb_a td{white-space:nowrap;overflow:hidden;line-height:22px}#gssb_b{font-size:11px;color:#36c;text-decoration:none}#gssb_b:hover{font-size:11px;color:#36c;text-decoration:underline}.gssb_g{text-align:center;padding:8px 0 7px;position:relative}.gssb_h{font-size:15px;height:28px;margin:0.2em;-webkit-appearance:button}.gssb_i{background:#eee}.gss_ifl{visibility:hidden;padding-left:5px}.gssb_i .gss_ifl{visibility:visible}a.gssb_j{font-size:13px;color:#36c;text-decoration:none;line-height:100%}a.gssb_j:hover{text-decoration:underline}.gssb_l{height:1px;background-color:#e5e5e5}.gssb_m{color:#000;background:#fff}.gsfe_a{border:1px solid #b9b9b9;border-top-color:#a0a0a0;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);}.gsfe_b{border:1px solid #4d90fe;outline:none;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);}.gssb_a{padding:0 9px}.gsib_a{padding-right:8px;padding-left:8px}.gsst_a{padding-top:3px}.gssb_e{border:0}.gssb_l{margin:5px 0}.gssb_c .gsc-completion-container{position:static}.gssb_c{z-index:5000}.gsc-completion-container table{background:transparent;font-size:inherit;font-family:inherit}.gssb_c > tbody > tr,.gssb_c > tbody > tr > td,.gssb_d,.gssb_d > tbody > tr,.gssb_d > tbody > tr > td,.gssb_e,.gssb_e > tbody > tr,.gssb_e > tbody > tr > td{padding:0;margin:0;border:0}.gssb_a table,.gssb_a table tr,.gssb_a table tr td{padding:0;margin:0;border:0}</style><script id="_fbn_projs" type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/C6ADVKE.json"></script></head>
<body class="single single-post postid-18430 single-format-standard custom-background custom-background-white custom-font-enabled">
<div id="page" class="hfeed site">
	<header id="masthead" class="site-header" role="banner">
					<hgroup>
			<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>
				<br ...=""> <a class="site-description">A computer science portal for geeks</a>
		</hgroup>

<div style="float:right;">
<hgroup style="float:right;">   


<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.practice.geeksforgeeks.org/">Practice</a>

<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://quiz.geeksforgeeks.org/gate-corner-2/">GATE CS</a>

<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://quiz.geeksforgeeks.org/placements/">Placements</a>

<a style="padding:0px 30px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://quiz.geeksforgeeks.org/">GeeksQuiz</a>

</hgroup><br><br>

<span style="display:inline-block; width:300px;">
<script>
  (function() {
    var cx = '009682134359037907028:tj6eafkv_be';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//cse.google.com/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<div id="___gcse_0"><div class="gsc-control-cse gsc-control-cse-en"><div class="gsc-control-wrapper-cse" dir="ltr"><form class="gsc-search-box gsc-search-box-tools" accept-charset="utf-8"><table cellspacing="0" cellpadding="0" class="gsc-search-box"><tbody><tr><td class="gsc-input"><div class="gsc-input-box" id="gsc-iw-id1"><table cellspacing="0" cellpadding="0" id="gs_id50" class="gstl_50 " style="width: 100%; padding: 0px;"><tbody><tr><td id="gs_tti50" class="gsib_a"><input autocomplete="off" type="text" size="10" class="gsc-input" name="search" title="search" id="gsc-i-id1" dir="ltr" spellcheck="false" style="width: 100%; padding: 0px; border: none; margin: -0.0625em 0px 0px; height: 1.25em; outline: none; background: url(&quot;http://www.google.com/cse/static/en/google_custom_search_watermark.gif&quot;) left center no-repeat rgb(255, 255, 255);"></td><td class="gsib_b"><div class="gsst_b" id="gs_st50" dir="ltr"><a class="gsst_a" href="javascript:void(0)" style="display: none;"><span class="gscb_a" id="gs_cb50">×</span></a></div></td></tr></tbody></table></div><input type="hidden" name="bgresponse" id="bgresponse"></td><td class="gsc-search-button"><input type="image" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/search_box_icon.png" class="gsc-search-button gsc-search-button-v2" title="search"></td><td class="gsc-clear-button"><div class="gsc-clear-button" title="clear results">&nbsp;</div></td></tr></tbody></table><table cellspacing="0" cellpadding="0" class="gsc-branding"><tbody><tr><td class="gsc-branding-user-defined"></td><td class="gsc-branding-text"><div class="gsc-branding-text">powered by</div></td><td class="gsc-branding-img"><img src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/small-logo.png" class="gsc-branding-img"></td></tr></tbody></table></form><div class="gsc-results-wrapper-overlay"><div class="gsc-results-close-btn" tabindex="0"></div><div class="gsc-tabsAreaInvisible"><div class="gsc-tabHeader gsc-inline-block gsc-tabhActive">Custom Search</div><span class="gs-spacer"> </span></div><div class="gsc-tabsAreaInvisible"></div><div class="gsc-above-wrapper-area-invisible"><table cellspacing="0" cellpadding="0" class="gsc-above-wrapper-area-container"><tbody><tr><td class="gsc-result-info-container"><div class="gsc-result-info-invisible"></div></td><td class="gsc-orderby-container"><div class="gsc-orderby-invisible"><div class="gsc-orderby-label gsc-inline-block">Sort by:</div><div class="gsc-option-menu-container gsc-inline-block"><div class="gsc-selected-option-container gsc-inline-block"><div class="gsc-selected-option">Relevance</div><div class="gsc-option-selector"></div></div><div class="gsc-option-menu-invisible"><div class="gsc-option-menu-item gsc-option-menu-item-highlighted"><div class="gsc-option">Relevance</div></div><div class="gsc-option-menu-item"><div class="gsc-option">Date</div></div></div></div></div></td></tr></tbody></table></div><div class="gsc-adBlockInvisible"></div><div class="gsc-wrapper"><div class="gsc-adBlockInvisible"></div><div class="gsc-resultsbox-invisible"><div class="gsc-resultsRoot gsc-tabData gsc-tabdActive"><table cellspacing="0" cellpadding="0" class="gsc-resultsHeader"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Web</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div class="gsc-result-selector gsc-one-result" title="show one result">&nbsp;</div><div class="gsc-result-selector gsc-more-results" title="show more results">&nbsp;</div><div class="gsc-result-selector gsc-all-results" title="show all results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div></div></div></div><div class="gsc-modal-background-image" tabindex="0"></div></div></div></div>

</span>
    <script type="text/javascript" defer="">
    var username;
    var isLoggedIn = false;
    var domain = 1;
    var arrPost = new Array();
    jQuery(document).ready(function(){
      jQuery.ajax({
		type: 'GET', 
		dataType: "json", 
		url: "http://auth.geeksforgeeks.org/profileLink.php", xhrFields:{withCredentials:true},
		success: function (responseData, textStatus, jqXHR) 
		{
			document.getElementById("profile").innerHTML = responseData.data;
			username = responseData.userName;

			isLoggedIn = responseData.isLoggedIn;
			

			if(isLoggedIn && arrPost.length != 0)
			{
				jQuery.ajax({
               			url:"http://www.practice.geeksforgeeks.org/logPostData.php",
                		method:"POST",
                		data: { arrPostInfo : arrPost, user : username, domain : domain },
                		dataType:"text",
                		success:function(response,statusText,jqXHR){

				//console.log(response);

				//document.getElementById("relatedPosts").innerHTML = response;

				},
                	   });
			}		
		},
		error: function (responseData, textStatus, errorThrown) 
		{ 
			console.log('HTTP Status : ' + textStatus); 
		}
		
	});

});
</script>
<div id="profile" style="float: right; margin-top: 20px; margin-right: 10px;"><center><a href="http://auth.geeksforgeeks.org/" style="font-size:20px;">Login/Register</a></center></div>
</div>

		
		
		<nav id="site-navigation" class="themonic-nav" role="navigation">
			<a class="assistive-text" href="http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/#content" title="Skip to content">Skip to content</a>
			<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-135003" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-135003"><a href="http://www.geeksforgeeks.org/">Home</a></li>
<li id="menu-item-135004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135004"><a title="Algorithms" href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</a>
<ul class="sub-menu">
	<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>
	<li id="menu-item-135031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135031"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Searching and Sorting</a></li>
	<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">Greedy Algorithms</a></li>
	<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">Dynamic Programming</a></li>
	<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>
	<li id="menu-item-135035" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135035"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">Other String Algorithms</a></li>
	<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>
	<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>
	<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>
	<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>
	<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">Bit Algorithms</a></li>
	<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">Graph Algorithms</a></li>
	<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">Randomized Algorithms</a></li>
	<li id="menu-item-137933" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137933"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BranchandBound">Branch &amp; Bound</a></li>
</ul>
</li>
<li id="menu-item-135010" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135010"><a title="Data Structures" href="http://www.geeksforgeeks.org/data-structures/">DS</a>
<ul class="sub-menu">
	<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/#LinkedList">LinkedList</a></li>
	<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/data-structures/#Stack">Stack</a></li>
	<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/data-structures/#Queue">Queue</a></li>
	<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/data-structures/#BinaryTree">Binary Tree</a></li>
	<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">Binary Search Tree</a></li>
	<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/data-structures/#Heap">Heap</a></li>
	<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/data-structures/#Hashing">Hashing</a></li>
	<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/data-structures/#Graph">Graph</a></li>
	<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">Advanced Data Structure</a></li>
	<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/data-structures/#Array">Array</a></li>
	<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/data-structures/#Matrix">Matrix</a></li>
	<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/#Misc">Misc</a></li>
</ul>
</li>
<li id="menu-item-135014" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135014"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview</a>
<ul class="sub-menu">
	<li id="menu-item-137171" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137171"><a href="http://www.geeksforgeeks.org/interview-preparation-for-software-developer/">Top Topics</a></li>
	<li id="menu-item-137172" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137172"><a href="http://www.practice.geeksforgeeks.org/tags.php?">Practice Company Questions</a></li>
	<li id="menu-item-137173" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137173"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></li>
	<li id="menu-item-137174" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137174"><a href="http://www.geeksforgeeks.org/category/interview-experiences/experienced-interview-experiences/">Experienced Interviews</a></li>
	<li id="menu-item-137175" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137175"><a href="http://www.geeksforgeeks.org/category/interview-experiences/internship-interview-experiences/">Internship Interviews</a></li>
	<li id="menu-item-137176" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137176"><a href="http://www.geeksforgeeks.org/category/competitive-programming/">Competitive Programming</a></li>
	<li id="menu-item-137186" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137186"><a href="http://geeksquiz.com/quiz-corner/">Multiple Choice Quizzes</a></li>
</ul>
</li>
<li id="menu-item-137178" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-137178"><a href="http://www.geeksforgeeks.org/student-corner/">Students</a>
<ul class="sub-menu">
	<li id="menu-item-137183" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137183"><a href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">Campus Ambassador Program</a></li>
	<li id="menu-item-137179" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137179"><a href="http://www.geeksforgeeks.org/geek-of-the-month/">Geek of the Month</a></li>
	<li id="menu-item-137570" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137570"><a href="http://geeksquiz.com/placements/">Placement Course</a></li>
	<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>
	<li id="menu-item-137180" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137180"><a href="http://www.geeksforgeeks.org/category/competitive-programming/">Competitive Programming</a></li>
	<li id="menu-item-137181" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137181"><a href="http://www.geeksforgeeks.org/testimonials/">Testimonials</a></li>
	<li id="menu-item-138863" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-138863"><a href="http://www.geeksforgeeks.org/category/geek-on-the-top/">Geek on the Top</a></li>
</ul>
</li>
<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>
<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>
<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>
<li id="menu-item-135009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135009"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask Q</a></li>
<li id="menu-item-135077" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135077"><a href="http://www.geeksforgeeks.org/official-apps-2/">Apps</a></li>
<li id="menu-item-135028" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135028"><a href="http://www.geeksforgeeks.org/category/gfact/">GFact</a></li>
<li id="menu-item-136978" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-136978"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a>
<ul class="sub-menu">
	<li id="menu-item-137360" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137360"><a href="http://www.geeksforgeeks.org/job-seekers/">Job Seekers</a></li>
	<li id="menu-item-137351" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137351"><a href="http://www.geeksforgeeks.org/employers/">Employers</a></li>
	<li id="menu-item-137361" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137361"><a href="http://www.geeksforgeeks.org/advertise-with-us/">Advertise with us</a></li>
	<li id="menu-item-137378" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137378"><a href="http://www.geeksforgeeks.org/internship/">Internship</a></li>
</ul>
</li>
<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>
<li id="menu-item-135019" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135019"><a href="http://www.geeksforgeeks.org/category/c-arrays/">Arr</a></li>
<li id="menu-item-135022" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135022"><a href="http://www.geeksforgeeks.org/category/c-strings/">String</a></li>
<li id="menu-item-135937" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135937"><a href="http://www.geeksforgeeks.org/category/matrix/">Matrix</a></li>
<li id="menu-item-135023" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135023"><a href="http://www.geeksforgeeks.org/category/linked-list/">LinkedList</a></li>
<li id="menu-item-135029" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135029"><a href="http://www.geeksforgeeks.org/category/stack/">Stack</a></li>
<li id="menu-item-135932" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135932"><a href="http://www.geeksforgeeks.org/category/queue/">Q</a></li>
<li id="menu-item-136299" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136299"><a href="http://www.geeksforgeeks.org/category/hash/">Hash</a></li>
<li id="menu-item-135941" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135941"><a href="http://www.geeksforgeeks.org/category/heap/">Heap</a></li>
<li id="menu-item-135020" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135020"><a href="http://www.geeksforgeeks.org/category/tree/">Tree</a></li>
<li id="menu-item-135940" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135940"><a href="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</a></li>
<li id="menu-item-135024" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135024"><a href="http://www.geeksforgeeks.org/category/graph/">Graph</a></li>
<li id="menu-item-135017" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135017"><a href="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</a></li>
<li id="menu-item-135027" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135027"><a href="http://www.geeksforgeeks.org/category/bit-magic/">Bit</a></li>
<li id="menu-item-135021" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135021"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</a></li>
<li id="menu-item-135018" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135018"><a href="http://www.geeksforgeeks.org/category/misc/">Misc</a></li>
<li id="menu-item-135025" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135025"><a href="http://www.geeksforgeeks.org/category/program-output/">Output</a></li>
</ul><select class="selectnav" id="selectnav1"><option value="">Menu</option><option value="http://www.geeksforgeeks.org/">Home</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">- Analysis of Algorithms</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">- Searching and Sorting</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">- Greedy Algorithms</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">- Dynamic Programming</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">- Pattern Searching</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">- Other String Algorithms</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">- Backtracking</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">- Divide and Conquer</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">- Geometric Algorithms</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">- Mathematical Algorithms</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">- Bit Algorithms</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">- Graph Algorithms</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">- Randomized Algorithms</option><option value="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BranchandBound">- Branch &amp; Bound</option><option value="http://www.geeksforgeeks.org/data-structures/">DS</option><option value="http://www.geeksforgeeks.org/data-structures/#LinkedList">- LinkedList</option><option value="http://www.geeksforgeeks.org/data-structures/#Stack">- Stack</option><option value="http://www.geeksforgeeks.org/data-structures/#Queue">- Queue</option><option value="http://www.geeksforgeeks.org/data-structures/#BinaryTree">- Binary Tree</option><option value="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">- Binary Search Tree</option><option value="http://www.geeksforgeeks.org/data-structures/#Heap">- Heap</option><option value="http://www.geeksforgeeks.org/data-structures/#Hashing">- Hashing</option><option value="http://www.geeksforgeeks.org/data-structures/#Graph">- Graph</option><option value="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">- Advanced Data Structure</option><option value="http://www.geeksforgeeks.org/data-structures/#Array">- Array</option><option value="http://www.geeksforgeeks.org/data-structures/#Matrix">- Matrix</option><option value="http://www.geeksforgeeks.org/data-structures/#Misc">- Misc</option><option value="http://www.geeksforgeeks.org/about/interview-corner/">Interview</option><option value="http://www.geeksforgeeks.org/interview-preparation-for-software-developer/">- Top Topics</option><option value="http://www.practice.geeksforgeeks.org/tags.php?">- Practice Company Questions</option><option value="http://www.geeksforgeeks.org/about/interview-corner/">- Interview Experiences</option><option value="http://www.geeksforgeeks.org/category/interview-experiences/experienced-interview-experiences/">- Experienced Interviews</option><option value="http://www.geeksforgeeks.org/category/interview-experiences/internship-interview-experiences/">- Internship Interviews</option><option value="http://www.geeksforgeeks.org/category/competitive-programming/">- Competitive Programming</option><option value="http://geeksquiz.com/quiz-corner/">- Multiple Choice Quizzes</option><option value="http://www.geeksforgeeks.org/student-corner/">Students</option><option value="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">- Campus Ambassador Program</option><option value="http://www.geeksforgeeks.org/geek-of-the-month/">- Geek of the Month</option><option value="http://geeksquiz.com/placements/">- Placement Course</option><option value="http://www.geeksforgeeks.org/category/project/">- Project</option><option value="http://www.geeksforgeeks.org/category/competitive-programming/">- Competitive Programming</option><option value="http://www.geeksforgeeks.org/testimonials/">- Testimonials</option><option value="http://www.geeksforgeeks.org/category/geek-on-the-top/">- Geek on the Top</option><option value="http://www.geeksforgeeks.org/c/">C</option><option value="http://www.geeksforgeeks.org/c-plus-plus/">C++</option><option value="http://www.geeksforgeeks.org/java/">Java</option><option value="http://www.geeksforgeeks.org/python/">Python</option><option value="http://www.geeksforgeeks.org/contribute/">Contribute</option><option value="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask Q</option><option value="http://www.geeksforgeeks.org/official-apps-2/">Apps</option><option value="http://www.geeksforgeeks.org/category/gfact/">GFact</option><option value="http://www.geeksforgeeks.org/jobs/">Jobs</option><option value="http://www.geeksforgeeks.org/job-seekers/">- Job Seekers</option><option value="http://www.geeksforgeeks.org/employers/">- Employers</option><option value="http://www.geeksforgeeks.org/advertise-with-us/">- Advertise with us</option><option value="http://www.geeksforgeeks.org/internship/">- Internship</option><option value="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</option><option value="http://www.geeksforgeeks.org/category/c-arrays/">Arr</option><option value="http://www.geeksforgeeks.org/category/c-strings/">String</option><option value="http://www.geeksforgeeks.org/category/matrix/">Matrix</option><option value="http://www.geeksforgeeks.org/category/linked-list/">LinkedList</option><option value="http://www.geeksforgeeks.org/category/stack/">Stack</option><option value="http://www.geeksforgeeks.org/category/queue/">Q</option><option value="http://www.geeksforgeeks.org/category/hash/">Hash</option><option value="http://www.geeksforgeeks.org/category/heap/">Heap</option><option value="http://www.geeksforgeeks.org/category/tree/">Tree</option><option value="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</option><option value="http://www.geeksforgeeks.org/category/graph/">Graph</option><option value="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</option><option value="http://www.geeksforgeeks.org/category/bit-magic/">Bit</option><option value="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</option><option value="http://www.geeksforgeeks.org/category/misc/">Misc</option><option value="http://www.geeksforgeeks.org/category/program-output/">Output</option></select></div>		</nav><!-- #site-navigation -->
		<div class="clear"></div>
	</header><!-- #masthead -->

	<div id="main" class="wrapper">
	<div id="primary" class="site-content">
		<div id="content" role="main">

							
	<article id="post-18430" class="post-18430 post type-post status-publish format-standard hentry category-dynamic-programming tag-dynamic-programming">
				<header class="entry-header">
						<h1 class="entry-title">Dynamic Programming | Set 10 ( 0-1 Knapsack Problem)</h1>
				
			</header><!-- .entry-header -->

				<div class="entry-content">
			<p>Given weights and values of n items, put these items in a knapsack of capacity W to get the maximum total value in the knapsack. <span id="more-18430"></span> In other words, given two integer arrays val[0..n-1] and wt[0..n-1] which represent values and weights associated with n items respectively. Also given an integer W which represents knapsack capacity, find out the maximum value subset of val[] such that sum of the weights of this subset is smaller than or equal to W. You cannot break an item, either pick the complete item, or don’t pick it (0-1 property).</p>
<div id="practice"><h2><a href="http://www.practice.geeksforgeeks.org/problem-page.php?pid=909">We strongly recommend that you click here and practice it, before moving on to the solution.</a></h2></div>
<p>A simple solution is to consider all subsets of items and calculate the total weight and value of all subsets. Consider the only subsets whose total weight is smaller than W. From all such subsets, pick the maximum value subset.</p>
<p><strong>1) Optimal Substructure:</strong><br>
To consider all subsets of items, there can be two cases for every item: (1) the item is included in the optimal subset, (2) not included in the optimal set.<br>
Therefore, the maximum value that can be obtained from n items is max of following two values.<br>
1) Maximum value obtained by n-1 items and W weight (excluding nth item).<br>
2) Value of nth item plus maximum value obtained by n-1 items and W minus weight of the nth item (including nth item).</p>
<p>If weight of nth item is greater than W, then the nth item cannot be included and case 1 is the only possibility.</p>
<p><strong>2) Overlapping Subproblems</strong><br>
Following is recursive implementation that simply follows the recursive structure mentioned above.<br>
</p><div class="responsive-tabs-wrapper"><div class="responsive-tabs responsive-tabs--enabled"><ul class="responsive-tabs__list" role="tablist"><li class="responsive-tabs__list__item responsive-tabs__list__item--active" id="tablist1-tab1" aria-controls="tablist1-panel1" role="tab" tabindex="0">C/C++</li><li class="responsive-tabs__list__item" id="tablist1-tab2" aria-controls="tablist1-panel2" role="tab" tabindex="0">Java</li><li class="responsive-tabs__list__item" id="tablist1-tab3" aria-controls="tablist1-panel3" role="tab" tabindex="0">Python</li></ul>
<h2 class="tabtitle responsive-tabs__heading responsive-tabs__heading--active" tabindex="0">C/C++</h2>
<div class="tabcontent responsive-tabs__panel responsive-tabs__panel--active" aria-hidden="false" role="tabpanel" aria-labelledby="tablist1-tab1" id="tablist1-panel1">
<p></p>
<div><div id="highlighter_717385" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* A Naive recursive implementation of 0-1 Knapsack problem */</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include&lt;stdio.h&gt;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp comments">// A utility function that returns maximum of two integers</code></div><div class="line number5 index4 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">max(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">a, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">b) { </code><code class="cpp keyword bold">return</code> <code class="cpp plain">(a &gt; b)? a : b; }</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2 highlighted"><code class="cpp comments">// Returns the maximum value that can be put in a knapsack of capacity W</code></div><div class="line number8 index7 alt1 highlighted"><code class="cpp color1 bold">int</code> <code class="cpp plain">knapSack(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">W, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">wt[], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">val[], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">n)</code></div><div class="line number9 index8 alt2 highlighted"><code class="cpp plain">{</code></div><div class="line number10 index9 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Base Case</code></div><div class="line number11 index10 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(n == 0 || W == 0)</code></div><div class="line number12 index11 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number13 index12 alt2 highlighted">&nbsp;</div><div class="line number14 index13 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// If weight of the nth item is more than Knapsack capacity W, then</code></div><div class="line number15 index14 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// this item cannot be included in the optimal solution</code></div><div class="line number16 index15 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(wt[n-1] &gt; W)</code></div><div class="line number17 index16 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">knapSack(W, wt, val, n-1);</code></div><div class="line number18 index17 alt1 highlighted">&nbsp;</div><div class="line number19 index18 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Return the maximum of two cases: </code></div><div class="line number20 index19 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// (1) nth item included </code></div><div class="line number21 index20 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// (2) not included</code></div><div class="line number22 index21 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp keyword bold">return</code> <code class="cpp plain">max( val[n-1] + knapSack(W-wt[n-1], wt, val, n-1),</code></div><div class="line number23 index22 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">knapSack(W, wt, val, n-1)</code></div><div class="line number24 index23 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">);</code></div><div class="line number25 index24 alt2 highlighted"><code class="cpp plain">}</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="cpp comments">// Driver program to test above function</code></div><div class="line number28 index27 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number29 index28 alt2"><code class="cpp plain">{</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">val[] = {60, 100, 120};</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">wt[] = {10, 20, 30};</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code>&nbsp; <code class="cpp plain">W = 50;</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">n = </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(val)/</code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(val[0]);</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, knapSack(W, wt, val, n));</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number36 index35 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table><button style="background-color: #39B54A; color:#FFF; box-shadow: 0px 0px 5px 0px #AAA; float:right;" onclick="redirect( &#39;highlighter_717385&#39;, &#39;cpp&#39; )">Run on IDE</button></div></div>

</div><h2 class="tabtitle responsive-tabs__heading" tabindex="0">Java</h2>
<div class="tabcontent responsive-tabs__panel" aria-hidden="true" role="tabpanel" aria-labelledby="tablist1-tab2" id="tablist1-panel2" style="display: none;">

<div><div id="highlighter_49537" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java comments">/* A Naive recursive implementation of 0-1 Knapsack problem */</code></div><div class="line number2 index1 alt1 highlighted"><code class="java keyword">class</code> <code class="java plain">Knapsack</code></div><div class="line number3 index2 alt2 highlighted"><code class="java plain">{</code></div><div class="line number4 index3 alt1 highlighted">&nbsp;</div><div class="line number5 index4 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// A utility function that returns maximum of two integers</code></div><div class="line number6 index5 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">static</code> <code class="java keyword">int</code> <code class="java plain">max(</code><code class="java keyword">int</code> <code class="java plain">a, </code><code class="java keyword">int</code> <code class="java plain">b) { </code><code class="java keyword">return</code> <code class="java plain">(a &gt; b)? a : b; }</code></div><div class="line number7 index6 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number8 index7 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// Returns the maximum value that can be put in a knapsack of capacity W</code></div><div class="line number9 index8 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">static</code> <code class="java keyword">int</code> <code class="java plain">knapSack(</code><code class="java keyword">int</code> <code class="java plain">W, </code><code class="java keyword">int</code> <code class="java plain">wt[], </code><code class="java keyword">int</code> <code class="java plain">val[], </code><code class="java keyword">int</code> <code class="java plain">n)</code></div><div class="line number10 index9 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number11 index10 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// Base Case</code></div><div class="line number12 index11 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">if</code> <code class="java plain">(n == </code><code class="java value">0</code> <code class="java plain">|| W == </code><code class="java value">0</code><code class="java plain">)</code></div><div class="line number13 index12 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java value">0</code><code class="java plain">;</code></div><div class="line number14 index13 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number15 index14 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// If weight of the nth item is more than Knapsack capacity W, then</code></div><div class="line number16 index15 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// this item cannot be included in the optimal solution</code></div><div class="line number17 index16 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">if</code> <code class="java plain">(wt[n-</code><code class="java value">1</code><code class="java plain">] &gt; W)</code></div><div class="line number18 index17 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">knapSack(W, wt, val, n-</code><code class="java value">1</code><code class="java plain">);</code></div><div class="line number19 index18 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number20 index19 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// Return the maximum of two cases: </code></div><div class="line number21 index20 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// (1) nth item included </code></div><div class="line number22 index21 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// (2) not included</code></div><div class="line number23 index22 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">else</code> <code class="java keyword">return</code> <code class="java plain">max( val[n-</code><code class="java value">1</code><code class="java plain">] + knapSack(W-wt[n-</code><code class="java value">1</code><code class="java plain">], wt, val, n-</code><code class="java value">1</code><code class="java plain">),</code></div><div class="line number24 index23 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">knapSack(W, wt, val, n-</code><code class="java value">1</code><code class="java plain">)</code></div><div class="line number25 index24 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">);</code></div><div class="line number26 index25 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number27 index26 alt2">&nbsp;</div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;</code><code class="java comments">// Driver program to test above function</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java keyword">void</code> <code class="java plain">main(String args[])</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">val[] = </code><code class="java keyword">new</code> <code class="java keyword">int</code><code class="java plain">[]{</code><code class="java value">60</code><code class="java plain">, </code><code class="java value">100</code><code class="java plain">, </code><code class="java value">120</code><code class="java plain">};</code></div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">wt[] = </code><code class="java keyword">new</code> <code class="java keyword">int</code><code class="java plain">[]{</code><code class="java value">10</code><code class="java plain">, </code><code class="java value">20</code><code class="java plain">, </code><code class="java value">30</code><code class="java plain">};</code></div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code>&nbsp; <code class="java plain">W = </code><code class="java value">50</code><code class="java plain">;</code></div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">n = val.length;</code></div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(knapSack(W, wt, val, n));</code></div><div class="line number37 index36 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number38 index37 alt1"><code class="java plain">}</code></div><div class="line number39 index38 alt2"><code class="java comments">/*This code is contributed by Rajat Mishra */</code></div></div></td></tr></tbody></table><button style="background-color: #39B54A; color:#FFF; box-shadow: 0px 0px 5px 0px #AAA; float:right;" onclick="redirect( &#39;highlighter_49537&#39;, &#39;java&#39; )">Run on IDE</button></div></div>

</div><h2 class="tabtitle responsive-tabs__heading" tabindex="0">Python</h2>
<div class="tabcontent responsive-tabs__panel" aria-hidden="true" role="tabpanel" aria-labelledby="tablist1-tab3" id="tablist1-panel3" style="display: none;">

<div><div id="highlighter_856835" class="syntaxhighlighter nogutter  python"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="python comments">#A naive recursive implementation of 0-1 Knapsack Problem</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2 highlighted"><code class="python comments"># Returns the maximum value that can be put in a knapsack of</code></div><div class="line number4 index3 alt1 highlighted"><code class="python comments"># capacity W</code></div><div class="line number5 index4 alt2 highlighted"><code class="python keyword">def</code> <code class="python plain">knapSack(W , wt , val , n):</code></div><div class="line number6 index5 alt1 highlighted">&nbsp;</div><div class="line number7 index6 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python comments"># Base Case</code></div><div class="line number8 index7 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">if</code> <code class="python plain">n </code><code class="python keyword">=</code><code class="python keyword">=</code> <code class="python value">0</code> <code class="python keyword">or</code> <code class="python plain">W </code><code class="python keyword">=</code><code class="python keyword">=</code> <code class="python value">0</code> <code class="python plain">:</code></div><div class="line number9 index8 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">return</code> <code class="python value">0</code></div><div class="line number10 index9 alt1 highlighted">&nbsp;</div><div class="line number11 index10 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python comments"># If weight of the nth item is more than Knapsack of capacity</code></div><div class="line number12 index11 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python comments"># W, then this item cannot be included in the optimal solution</code></div><div class="line number13 index12 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">if</code> <code class="python plain">(wt[n</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">] &gt; W):</code></div><div class="line number14 index13 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">return</code> <code class="python plain">knapSack(W , wt , val , n</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">)</code></div><div class="line number15 index14 alt2 highlighted">&nbsp;</div><div class="line number16 index15 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python comments"># return the maximum of two cases:</code></div><div class="line number17 index16 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python comments"># (1) nth item included</code></div><div class="line number18 index17 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python comments"># (2) not included</code></div><div class="line number19 index18 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">else</code><code class="python plain">:</code></div><div class="line number20 index19 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">return</code> <code class="python functions">max</code><code class="python plain">(val[n</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">] </code><code class="python keyword">+</code> <code class="python plain">knapSack(W</code><code class="python keyword">-</code><code class="python plain">wt[n</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">] , wt , val , n</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">),</code></div><div class="line number21 index20 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python plain">knapSack(W , wt , val , n</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">))</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="python comments"># end of function knapSack</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="python comments"># To test above function</code></div><div class="line number26 index25 alt1"><code class="python plain">val </code><code class="python keyword">=</code> <code class="python plain">[</code><code class="python value">60</code><code class="python plain">, </code><code class="python value">100</code><code class="python plain">, </code><code class="python value">120</code><code class="python plain">]</code></div><div class="line number27 index26 alt2"><code class="python plain">wt </code><code class="python keyword">=</code> <code class="python plain">[</code><code class="python value">10</code><code class="python plain">, </code><code class="python value">20</code><code class="python plain">, </code><code class="python value">30</code><code class="python plain">]</code></div><div class="line number28 index27 alt1"><code class="python plain">W </code><code class="python keyword">=</code> <code class="python value">50</code></div><div class="line number29 index28 alt2"><code class="python plain">n </code><code class="python keyword">=</code> <code class="python functions">len</code><code class="python plain">(val)</code></div><div class="line number30 index29 alt1"><code class="python functions">print</code> <code class="python plain">knapSack(W , wt , val , n)</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="python comments"># This code is contributed by Nikhil Kumar Singh</code></div></div></td></tr></tbody></table><button style="background-color: #39B54A; color:#FFF; box-shadow: 0px 0px 5px 0px #AAA; float:right;" onclick="redirect( &#39;highlighter_856835&#39;, &#39;python&#39; )">Run on IDE</button></div></div>
<p></p></div></div></div><br>
Output:<p></p>
<pre>220</pre>
<p>It should be noted that the above function computes the same subproblems again and again. See the following recursion tree, K(1, 1) is being evaluated twice. Time complexity of this naive recursive solution is exponential (2^n).</p>
<pre>In the following recursion tree, K() refers to knapSack().  The two 
parameters indicated in the following recursion tree are n and W.  
The recursion tree is for following sample inputs.
wt[] = {1, 1, 1}, W = 2, val[] = {10, 20, 30}

                       K(3, 2)         ---------&gt; K(n, W)
                   /            \ 
                 /                \               
            K(2,2)                  K(2,1)
          /       \                  /    \ 
        /           \              /        \
       K(1,2)      K(1,1)        K(1,1)     K(1,0)
       /  \         /   \          /   \
     /      \     /       \      /       \
K(0,2)  K(0,1)  K(0,1)  K(0,0)  K(0,1)   K(0,0)
Recursion tree for Knapsack capacity 2 units and 3 items of 1 unit weight.
</pre>
<p>Since suproblems are evaluated again, this problem has Overlapping Subprolems property. So the 0-1 Knapsack problem has both properties (see <a href="http://www.geeksforgeeks.org/archives/12635">this </a>and <a href="http://www.geeksforgeeks.org/archives/12819">this</a>) of a dynamic programming problem. Like other typical <a href="http://www.geeksforgeeks.org/archives/tag/dynamic-programming">Dynamic Programming(DP) problems</a>, recomputations of same subproblems can be avoided by constructing a temporary array K[][] in bottom up manner. Following is Dynamic Programming based implementation.</p>
<div class="responsive-tabs-wrapper"><div class="responsive-tabs responsive-tabs--enabled"><ul class="responsive-tabs__list" role="tablist"><li class="responsive-tabs__list__item" id="tablist2-tab1" aria-controls="tablist2-panel1" role="tab" tabindex="0">C++</li><li class="responsive-tabs__list__item" id="tablist2-tab2" aria-controls="tablist2-panel2" role="tab" tabindex="0">Java</li><li class="responsive-tabs__list__item responsive-tabs__list__item--active" id="tablist2-tab3" aria-controls="tablist2-panel3" role="tab" tabindex="0">Python</li></ul>
<h2 class="tabtitle responsive-tabs__heading" tabindex="0">C++</h2>
<div class="tabcontent responsive-tabs__panel" aria-hidden="true" role="tabpanel" aria-labelledby="tablist2-tab1" id="tablist2-panel1" style="display: none;">

<div><div id="highlighter_828799" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// A Dynamic Programming based solution for 0-1 Knapsack problem</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include&lt;stdio.h&gt;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp comments">// A utility function that returns maximum of two integers</code></div><div class="line number5 index4 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">max(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">a, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">b) { </code><code class="cpp keyword bold">return</code> <code class="cpp plain">(a &gt; b)? a : b; }</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2 highlighted"><code class="cpp comments">// Returns the maximum value that can be put in a knapsack of capacity W</code></div><div class="line number8 index7 alt1 highlighted"><code class="cpp color1 bold">int</code> <code class="cpp plain">knapSack(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">W, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">wt[], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">val[], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">n)</code></div><div class="line number9 index8 alt2 highlighted"><code class="cpp plain">{</code></div><div class="line number10 index9 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i, w;</code></div><div class="line number11 index10 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">K[n+1][W+1];</code></div><div class="line number12 index11 alt1 highlighted">&nbsp;</div><div class="line number13 index12 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Build table K[][] in bottom up manner</code></div><div class="line number14 index13 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(i = 0; i &lt;= n; i++)</code></div><div class="line number15 index14 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number16 index15 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(w = 0; w &lt;= W; w++)</code></div><div class="line number17 index16 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number18 index17 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(i==0 || w==0)</code></div><div class="line number19 index18 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">K[i][w] = 0;</code></div><div class="line number20 index19 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code> <code class="cpp keyword bold">if</code> <code class="cpp plain">(wt[i-1] &lt;= w)</code></div><div class="line number21 index20 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">K[i][w] = max(val[i-1] + K[i-1][w-wt[i-1]],&nbsp; K[i-1][w]);</code></div><div class="line number22 index21 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number23 index22 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">K[i][w] = K[i-1][w];</code></div><div class="line number24 index23 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number25 index24 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number26 index25 alt1 highlighted">&nbsp;</div><div class="line number27 index26 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">K[n][W];</code></div><div class="line number28 index27 alt1 highlighted"><code class="cpp plain">}</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number31 index30 alt2"><code class="cpp plain">{</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">val[] = {60, 100, 120};</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">wt[] = {10, 20, 30};</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code>&nbsp; <code class="cpp plain">W = 50;</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">n = </code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(val)/</code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(val[0]);</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">, knapSack(W, wt, val, n));</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number38 index37 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table><button style="background-color: #39B54A; color:#FFF; box-shadow: 0px 0px 5px 0px #AAA; float:right;" onclick="redirect( &#39;highlighter_828799&#39;, &#39;cpp&#39; )">Run on IDE</button></div></div>

</div><h2 class="tabtitle responsive-tabs__heading" tabindex="0">Java</h2>
<div class="tabcontent responsive-tabs__panel" aria-hidden="true" role="tabpanel" aria-labelledby="tablist2-tab2" id="tablist2-panel2" style="display: none;">

<div><div id="highlighter_12181" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java comments">// A Dynamic Programming based solution for 0-1 Knapsack problem</code></div><div class="line number2 index1 alt1 highlighted"><code class="java keyword">class</code> <code class="java plain">Knapsack</code></div><div class="line number3 index2 alt2 highlighted"><code class="java plain">{</code></div><div class="line number4 index3 alt1 highlighted">&nbsp;</div><div class="line number5 index4 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// A utility function that returns maximum of two integers</code></div><div class="line number6 index5 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">static</code> <code class="java keyword">int</code> <code class="java plain">max(</code><code class="java keyword">int</code> <code class="java plain">a, </code><code class="java keyword">int</code> <code class="java plain">b) { </code><code class="java keyword">return</code> <code class="java plain">(a &gt; b)? a : b; }</code></div><div class="line number7 index6 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number8 index7 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;</code><code class="java comments">// Returns the maximum value that can be put in a knapsack of capacity W</code></div><div class="line number9 index8 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">static</code> <code class="java keyword">int</code> <code class="java plain">knapSack(</code><code class="java keyword">int</code> <code class="java plain">W, </code><code class="java keyword">int</code> <code class="java plain">wt[], </code><code class="java keyword">int</code> <code class="java plain">val[], </code><code class="java keyword">int</code> <code class="java plain">n)</code></div><div class="line number10 index9 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number11 index10 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">i, w;</code></div><div class="line number12 index11 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">K[][] = </code><code class="java keyword">new</code> <code class="java keyword">int</code><code class="java plain">[n+</code><code class="java value">1</code><code class="java plain">][W+</code><code class="java value">1</code><code class="java plain">];</code></div><div class="line number13 index12 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number14 index13 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// Build table K[][] in bottom up manner</code></div><div class="line number15 index14 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code> <code class="java plain">(i = </code><code class="java value">0</code><code class="java plain">; i &lt;= n; i++)</code></div><div class="line number16 index15 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number17 index16 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code> <code class="java plain">(w = </code><code class="java value">0</code><code class="java plain">; w &lt;= W; w++)</code></div><div class="line number18 index17 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number19 index18 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">if</code> <code class="java plain">(i==</code><code class="java value">0</code> <code class="java plain">|| w==</code><code class="java value">0</code><code class="java plain">)</code></div><div class="line number20 index19 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">K[i][w] = </code><code class="java value">0</code><code class="java plain">;</code></div><div class="line number21 index20 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">else</code> <code class="java keyword">if</code> <code class="java plain">(wt[i-</code><code class="java value">1</code><code class="java plain">] &lt;= w)</code></div><div class="line number22 index21 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">K[i][w] = max(val[i-</code><code class="java value">1</code><code class="java plain">] + K[i-</code><code class="java value">1</code><code class="java plain">][w-wt[i-</code><code class="java value">1</code><code class="java plain">]],&nbsp; K[i-</code><code class="java value">1</code><code class="java plain">][w]);</code></div><div class="line number23 index22 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">else</code></div><div class="line number24 index23 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">K[i][w] = K[i-</code><code class="java value">1</code><code class="java plain">][w];</code></div><div class="line number25 index24 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number26 index25 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number27 index26 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number28 index27 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">K[n][W];</code></div><div class="line number29 index28 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number30 index29 alt1">&nbsp;</div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// Driver program to test above function</code></div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java keyword">void</code> <code class="java plain">main(String args[])</code></div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">val[] = </code><code class="java keyword">new</code> <code class="java keyword">int</code><code class="java plain">[]{</code><code class="java value">60</code><code class="java plain">, </code><code class="java value">100</code><code class="java plain">, </code><code class="java value">120</code><code class="java plain">};</code></div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">wt[] = </code><code class="java keyword">new</code> <code class="java keyword">int</code><code class="java plain">[]{</code><code class="java value">10</code><code class="java plain">, </code><code class="java value">20</code><code class="java plain">, </code><code class="java value">30</code><code class="java plain">};</code></div><div class="line number37 index36 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code>&nbsp; <code class="java plain">W = </code><code class="java value">50</code><code class="java plain">;</code></div><div class="line number38 index37 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">n = val.length;</code></div><div class="line number39 index38 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(knapSack(W, wt, val, n));</code></div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number41 index40 alt2"><code class="java plain">}</code></div><div class="line number42 index41 alt1"><code class="java comments">/*This code is contributed by Rajat Mishra */</code></div></div></td></tr></tbody></table><button style="background-color: #39B54A; color:#FFF; box-shadow: 0px 0px 5px 0px #AAA; float:right;" onclick="redirect( &#39;highlighter_12181&#39;, &#39;java&#39; )">Run on IDE</button></div></div>

</div><h2 class="tabtitle responsive-tabs__heading responsive-tabs__heading--active" tabindex="0">Python</h2>
<div class="tabcontent responsive-tabs__panel responsive-tabs__panel--active" aria-hidden="false" role="tabpanel" aria-labelledby="tablist2-tab3" id="tablist2-panel3" style="display: block;">

<div><div id="highlighter_502327" class="syntaxhighlighter nogutter  python"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2 highlighted"><code class="python comments"># A Dynamic Programming based Python Program for 0-1 Knapsack problem</code></div><div class="line number2 index1 alt1 highlighted"><code class="python comments"># Returns the maximum value that can be put in a knapsack of capacity W</code></div><div class="line number3 index2 alt2 highlighted"><code class="python keyword">def</code> <code class="python plain">knapSack(W, wt, val, n):</code></div><div class="line number4 index3 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python plain">K </code><code class="python keyword">=</code> <code class="python plain">[[</code><code class="python value">0</code> <code class="python keyword">for</code> <code class="python plain">x </code><code class="python keyword">in</code> <code class="python functions">range</code><code class="python plain">(W</code><code class="python keyword">+</code><code class="python value">1</code><code class="python plain">)] </code><code class="python keyword">for</code> <code class="python plain">x </code><code class="python keyword">in</code> <code class="python functions">range</code><code class="python plain">(n</code><code class="python keyword">+</code><code class="python value">1</code><code class="python plain">)]</code></div><div class="line number5 index4 alt2 highlighted">&nbsp;</div><div class="line number6 index5 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python comments"># Build table K[][] in bottom up manner</code></div><div class="line number7 index6 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">for</code> <code class="python plain">i </code><code class="python keyword">in</code> <code class="python functions">range</code><code class="python plain">(n</code><code class="python keyword">+</code><code class="python value">1</code><code class="python plain">):</code></div><div class="line number8 index7 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">for</code> <code class="python plain">w </code><code class="python keyword">in</code> <code class="python functions">range</code><code class="python plain">(W</code><code class="python keyword">+</code><code class="python value">1</code><code class="python plain">):</code></div><div class="line number9 index8 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">if</code> <code class="python plain">i</code><code class="python keyword">=</code><code class="python keyword">=</code><code class="python value">0</code> <code class="python keyword">or</code> <code class="python plain">w</code><code class="python keyword">=</code><code class="python keyword">=</code><code class="python value">0</code><code class="python plain">:</code></div><div class="line number10 index9 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python plain">K[i][w] </code><code class="python keyword">=</code> <code class="python value">0</code></div><div class="line number11 index10 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">elif</code> <code class="python plain">wt[i</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">] &lt;</code><code class="python keyword">=</code> <code class="python plain">w:</code></div><div class="line number12 index11 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python plain">K[i][w] </code><code class="python keyword">=</code> <code class="python functions">max</code><code class="python plain">(val[i</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">] </code><code class="python keyword">+</code> <code class="python plain">K[i</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">][w</code><code class="python keyword">-</code><code class="python plain">wt[i</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">]],&nbsp; K[i</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">][w])</code></div><div class="line number13 index12 alt2 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">else</code><code class="python plain">:</code></div><div class="line number14 index13 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python plain">K[i][w] </code><code class="python keyword">=</code> <code class="python plain">K[i</code><code class="python keyword">-</code><code class="python value">1</code><code class="python plain">][w]</code></div><div class="line number15 index14 alt2 highlighted">&nbsp;</div><div class="line number16 index15 alt1 highlighted"><code class="python spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="python keyword">return</code> <code class="python plain">K[n][W]</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="python comments"># Driver program to test above function</code></div><div class="line number19 index18 alt2"><code class="python plain">val </code><code class="python keyword">=</code> <code class="python plain">[</code><code class="python value">60</code><code class="python plain">, </code><code class="python value">100</code><code class="python plain">, </code><code class="python value">120</code><code class="python plain">]</code></div><div class="line number20 index19 alt1"><code class="python plain">wt </code><code class="python keyword">=</code> <code class="python plain">[</code><code class="python value">10</code><code class="python plain">, </code><code class="python value">20</code><code class="python plain">, </code><code class="python value">30</code><code class="python plain">]</code></div><div class="line number21 index20 alt2"><code class="python plain">W </code><code class="python keyword">=</code> <code class="python value">50</code></div><div class="line number22 index21 alt1"><code class="python plain">n </code><code class="python keyword">=</code> <code class="python functions">len</code><code class="python plain">(val)</code></div><div class="line number23 index22 alt2"><code class="python functions">print</code><code class="python plain">(knapSack(W, wt, val, n))</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="python comments"># This code is contributed by Bhavya Jain</code></div></div></td></tr></tbody></table><button style="background-color: #39B54A; color:#FFF; box-shadow: 0px 0px 5px 0px #AAA; float:right;" onclick="redirect( &#39;highlighter_502327&#39;, &#39;python&#39; )">Run on IDE</button></div></div>
<p></p></div></div></div><br>
Output:<p></p>
<pre>220</pre>
<p>Time Complexity: O(nW) where n is the number of items and W is the capacity of knapsack.</p>
<div id="company_tags"><h3>Asked in: <a href="http://www.practice.geeksforgeeks.org/tag-page.php?isCmp=1&amp;tag=Amazon">Amazon</a></h3></div>
<p>References:<br>
<a href="http://www.es.ele.tue.nl/education/5MC10/Solutions/knapsack.pdf">http://www.es.ele.tue.nl/education/5MC10/Solutions/knapsack.pdf</a><br>
<a href="http://www.cse.unl.edu/~goddard/Courses/CSCE310J/Lectures/Lecture8-DynamicProgramming.pdf">http://www.cse.unl.edu/~goddard/Courses/CSCE310J/Lectures/Lecture8-DynamicProgramming.pdf</a></p>
<p><iframe width="665" height="374" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/T4bY72lCQac.html" frameborder="0" allowfullscreen=""></iframe></p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>

			<script async="" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/adsbygoogle.js"></script>
<!-- Big Rectangle Blog Bottom -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9465609616171866" data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<br><br>


<h1><strong><a href="http://quiz.geeksforgeeks.org/gate-corner-2/">GATE CS Corner</a>
&nbsp;&nbsp;&nbsp;<a href="http://www.practice.geeksforgeeks.org/tags.php">Company Wise Coding Practice</a></strong></h1>

		</div><!-- .entry-content -->
				
		

		<footer class="entry-meta">
		<span><div class="categoryButton"><a href="http://www.geeksforgeeks.org/category/algorithm/dynamic-programming/" rel="category tag">Dynamic Programming</a></div></span> <span><div class="tagButton"><a href="http://www.geeksforgeeks.org/tag/dynamic-programming/" rel="tag">Dynamic Programming</a></div></span> 
           	          	
					</footer><!-- .entry-meta -->
	</article><!-- #post -->

<div class="related_posts"><h3>Related Posts:</h3><ul><li><a href="http://www.geeksforgeeks.org/maximum-sum-alternating-subsequence-sum/" title="Maximum sum alternating subsequence">Maximum sum alternating subsequence</a></li><li><a href="http://www.geeksforgeeks.org/maximum-sum-pairs-specific-difference/" title="Maximum sum of pairs with specific difference">Maximum sum of pairs with specific difference</a></li><li><a href="http://www.geeksforgeeks.org/path-maximum-average-value/" title="Path with maximum average value">Path with maximum average value</a></li><li><a href="http://www.geeksforgeeks.org/recursively-break-number-3-parts-get-maximum-sum/" title="Recursively break a number in 3 parts to get maximum sum">Recursively break a number in 3 parts to get maximum sum</a></li><li><a href="http://www.geeksforgeeks.org/count-palindromic-subsequence-given-string/" title="Count All Palindromic Subsequence in a given String">Count All Palindromic Subsequence in a given String</a></li><li><a href="http://www.geeksforgeeks.org/print-longest-common-sub-sequences-lexicographical-order/" title="Print all longest common sub-sequences in lexicographical order">Print all longest common sub-sequences in lexicographical order</a></li><li><a href="http://www.geeksforgeeks.org/maximum-weight-path-ending-element-last-row-matrix/" title="Maximum weight path ending at any element of last row in a matrix">Maximum weight path ending at any element of last row in a matrix</a></li><li><a href="http://www.geeksforgeeks.org/number-of-permutation-with-k-inversions/" title="Number of permutation with K inversions">Number of permutation with K inversions</a></li></ul></div><br><br>

<!-- Added on 29 Oct 2015 for next and previous from same category -->
<nav class="nav-single">
					<div class="assistive-text">Post navigation</div>
					<span class="nav-previous"><a href="http://www.geeksforgeeks.org/dynamic-programming-set-9-binomial-coefficient/" rel="prev">&lt;&lt; Previous Post</a></span>
					<span class="nav-next"><a href="http://www.geeksforgeeks.org/dynamic-programming-set-11-egg-dropping-puzzle/" rel="next">Next Post &gt;&gt;</a></span>
				</nav><!-- .nav-single -->
<script type="text/javascript">
	
				arrPost.push('18430');
	
		   			arrPost.push('Dynamic Programming | Set 10 ( 0-1 Knapsack Problem)');
	
		   			arrPost.push('http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/');
	
		   			arrPost.push('Dynamic Programming');
	
		   
</script>




<div class="plugins">
<div pid="18430" ptitle="Dynamic Programming | Set 10 ( 0-1 Knapsack Problem)" id="ratePlugin"><div class="login">(<a href="http://auth.geeksforgeeks.org/?to=http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/">Login</a> to Rate and Mark)<br><br></div><div class="techno">
					<span id="rating_box" class="avg-rating level-3">3.4</span>
					<span class="rating-desc"> Average Difficulty : <b id="diff-rating">3.4/5.0</b><br><span id="vote_count">Based on <b>119</b> vote(s)</span></span><br>
				</div></div>
<div pid="18430" ptitle="Dynamic Programming | Set 10 ( 0-1 Knapsack Problem)" id="markPlugin"><br><br><div class="lists">
					<input id="todo" type="checkbox" class="mark">
					<label class="checkbox" for="todo"> Add to TODO List </label>
					<br>
					<input id="done" type="checkbox" class="mark">
					<label class="checkbox" for="done"> Mark as DONE </label>
			</div></div>
</div>

<br><br>
<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</p>
<br>
<button id="comment" class="show-comments">Load Comments</button>

<div id="disqus_thread"></div>

					</div><!-- #content -->
	</div><!-- #primary -->


			<div id="secondary" class="widget-area" role="complementary">
			<aside id="text-17" class="widget widget_text">			<div class="textwidget"><a href="http://quiz.geeksforgeeks.org/gate-corner-2/" style="margin-right: 0px !important;" target="_blank"><center><input type="button" value="GATE CS Preparation" style="background-color: #4cb96b; color:white; width:100%; font-size:large;"></center></a>
<a href="http://www.practice.geeksforgeeks.org/" style="margin-right: 0px !important;" target="_blank"><center><input type="button" value="Practice Coding Problems" style="background-color: #4cb96b; color:white; width:100%; font-size:large;"></center></a>
</div>
		</aside><aside id="text-18" class="widget widget_text">			<div class="textwidget"><script async="" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/adsbygoogle.js"></script>
<!-- LargeRectangleSide -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9465609616171866" data-ad-slot="1884636833"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</aside><aside id="text-33" class="widget widget_text">			<div class="textwidget"><script async="" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/adsbygoogle.js"></script>
<!-- Big 300x600 Sidebar -->
<ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px" data-ad-client="ca-pub-9465609616171866" data-ad-slot="4402736037"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</aside><aside id="text-32" class="widget widget_text">			<div class="textwidget"><a href="http://quiz.geeksforgeeks.org/placements/" target="_blank" style="margin-right: 0px !important;"><center><input type="button" value="Placement Course" style="background-color: #4cb96b; color:white;width:100%;font-size:large;"></center></a>

<a href="https://www.youtube.com/geeksforgeeksvideos" target="_blank" style="margin-right: 0px !important;"><center><input type="button" value="Subscribe on YouTube" style="background-color: #4cb96b; color:white;width:100%;font-size:large;"></center></a>

<a href="https://www.facebook.com/GeeksforGeeks-316764689022/timeline/" target="_blank" style="margin-right: 0px !important;"><center><input type="button" value="Like us on Facebook" style="background-color: #4cb96b; color:white;width:100%;font-size:large;"></center></a>

<a href="https://twitter.com/geeksforgeeks" target="_blank" style="margin-right: 0px !important;"><center><input type="button" value="Follow us on Twitter" style="background-color: #4cb96b; color:white;width:100%; font-size:large;"></center></a>

<a href="http://www.geeksforgeeks.org/recent-comments/" style="margin-right: 0px !important;"><center><input type="button" value="Recent Comments" style="background-color: #4cb96b; color:white; width:100%; font-size:large;"></center></a></div>
		</aside><aside id="text-36" class="widget widget_text">			<div class="textwidget"><a href="https://www.cayenne-mydevices.com/jumpstart-projects-with-cayenne/?utm_source=GeeksForGeeks%7Cs&amp;utm_campaign=GeeksForGeeks%20Arduino%20Raspberry%20Pi%7CGeeksForGeeks&amp;utm_medium=display&amp;utm_term=10%202016"><img src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/Cayenne-Raspberry-Pi-Arduino.jpeg" alt="mydevices" width="300" height="250" class="alignleft size-full wp-image-137754"></a></div>
		</aside><aside id="text-14" class="widget widget_text"><p class="widget-title">Popular Posts</p>			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a></li>
<li><a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a></li>
<li><a href="http://www.geeksforgeeks.org/a-complete-step-by-step-guide-for-placement-preparation-by-geeksforgeeks/">  Step by Step Guide for Placement Preparation</a></li>
<li><a href="http://www.geeksforgeeks.org/reflection-in-java/">  Reflection in Java</a></li>
<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/"> Heavy Light Decomposition</a> </li>
<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>
<li><a href="http://www.geeksforgeeks.org/generics-in-java/">Generics in Java</a></li>
<li><a href="http://www.geeksforgeeks.org/category/algorithm/pattern-searching/">
Aho-Corasick Algorithm for Pattern Searching</a></li>
<li><a href="http://quiz.geeksforgeeks.org/insertion-sort/">Insertion Sort</a>, <a href="http://geeksquiz.com/binary-search/">Binary Search</a>,  <a href="http://geeksquiz.com/quick-sort/">QuickSort</a>,  <a href="http://geeksquiz.com/merge-sort/">MergeSort</a>, <a href="http://geeksquiz.com/heap-sort/">HeapSort</a></li>
</ul></div>
		</aside><aside id="text-13" class="widget widget_text">			<div class="textwidget"><ul><li><a href="http://geeksquiz.com/category/articles/puzzle/">Common Interview Puzzles</a></li><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/category/advanced-data-structure/">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/category/design/">Design Patterns</a></li>
<li><a href="http://www.geeksforgeeks.org/category/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/category/greedy/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/category/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/category/divide-and-conquer">Divide &amp; Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/category/algorithm/geometric/">Geometric Algorithms</a></li><li><a href="http://www.geeksforgeeks.org/category/searching/">Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a></li>
<li><a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
</ul>




</div>
		</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href="http://www.geeksforgeeks.org/tag/adobe/" class="tag-link-148 tag-link-position-1" title="41 topics" style="font-size: 9.3413173652695pt;">Adobe</a>
<a href="http://www.geeksforgeeks.org/category/advanced-data-structure/" class="tag-link-1762 tag-link-position-2" title="98 topics" style="font-size: 12.526946107784pt;">Advanced Data Structure</a>
<a href="http://www.geeksforgeeks.org/category/algorithm/" class="tag-link-1744 tag-link-position-3" title="32 topics" style="font-size: 8.502994011976pt;">Algorithm</a>
<a href="http://www.geeksforgeeks.org/tag/amazon/" class="tag-link-1942 tag-link-position-4" title="319 topics" style="font-size: 16.802395209581pt;">Amazon</a>
<a href="http://www.geeksforgeeks.org/category/c-arrays/" class="tag-link-3 tag-link-position-5" title="142 topics" style="font-size: 13.868263473054pt;">Arrays</a>
<a href="http://www.geeksforgeeks.org/category/articles/" class="tag-link-18 tag-link-position-6" title="28 topics" style="font-size: 8pt;">Articles</a>
<a href="http://www.geeksforgeeks.org/category/binary-search-tree/" class="tag-link-1761 tag-link-position-7" title="39 topics" style="font-size: 9.1736526946108pt;">Binary Search Tree</a>
<a href="http://www.geeksforgeeks.org/category/bit-magic/" class="tag-link-17 tag-link-position-8" title="75 topics" style="font-size: 11.520958083832pt;">Bit Magic</a>
<a href="http://www.geeksforgeeks.org/category/c-puzzles/" class="tag-link-14 tag-link-position-9" title="349 topics" style="font-size: 17.053892215569pt;">C/C++ Puzzles</a>
<a href="http://www.geeksforgeeks.org/category/competitive-programming/" class="tag-link-1790 tag-link-position-10" title="28 topics" style="font-size: 8pt;">Competitive Programming</a>
<a href="http://www.geeksforgeeks.org/category/algorithm/divide-and-conquer/" class="tag-link-1750 tag-link-position-11" title="33 topics" style="font-size: 8.5868263473054pt;">Divide and Conquer</a>
<a href="http://www.geeksforgeeks.org/category/algorithm/dynamic-programming/" class="tag-link-1746 tag-link-position-12" title="135 topics" style="font-size: 13.616766467066pt;">Dynamic Programming</a>
<a href="http://www.geeksforgeeks.org/category/interview-experiences/experienced-interview-experiences/" class="tag-link-1795 tag-link-position-13" title="59 topics" style="font-size: 10.682634730539pt;">Experienced</a>
<a href="http://www.geeksforgeeks.org/tag/flipkart/" class="tag-link-173 tag-link-position-14" title="46 topics" style="font-size: 9.7604790419162pt;">Flipkart</a>
<a href="http://www.geeksforgeeks.org/tag/gate/" class="tag-link-114 tag-link-position-15" title="88 topics" style="font-size: 12.107784431138pt;">GATE</a>
<a href="http://www.geeksforgeeks.org/tag/gate-cs-ds-algo/" class="tag-link-79 tag-link-position-16" title="35 topics" style="font-size: 8.8383233532934pt;">GATE-CS-DS-&amp;-Algo</a>
<a href="http://www.geeksforgeeks.org/category/guestblogs/" class="tag-link-1710 tag-link-position-17" title="110 topics" style="font-size: 12.946107784431pt;">GBlog</a>
<a href="http://www.geeksforgeeks.org/category/graph/" class="tag-link-97 tag-link-position-18" title="111 topics" style="font-size: 12.946107784431pt;">Graph</a>
<a href="http://www.geeksforgeeks.org/tag/graph/" class="tag-link-97 tag-link-position-19" title="46 topics" style="font-size: 9.7604790419162pt;">Graph</a>
<a href="http://www.geeksforgeeks.org/category/algorithm/greedy/" class="tag-link-1747 tag-link-position-20" title="28 topics" style="font-size: 8pt;">Greedy</a>
<a href="http://www.geeksforgeeks.org/category/hash/" class="tag-link-1756 tag-link-position-21" title="40 topics" style="font-size: 9.2574850299401pt;">Hash</a>
<a href="http://www.geeksforgeeks.org/category/interview-experiences/internship-interview-experiences/" class="tag-link-1794 tag-link-position-22" title="97 topics" style="font-size: 12.443113772455pt;">Internship</a>
<a href="http://www.geeksforgeeks.org/category/interview-experiences/" class="tag-link-1140 tag-link-position-23" title="1,355 topics" style="font-size: 22pt;">Interview Experiences</a>
<a href="http://www.geeksforgeeks.org/tag/java-collections/" class="tag-link-1896 tag-link-position-24" title="31 topics" style="font-size: 8.4191616766467pt;">Java-Collections</a>
<a href="http://www.geeksforgeeks.org/category/linked-list/" class="tag-link-8 tag-link-position-25" title="90 topics" style="font-size: 12.191616766467pt;">Linked Lists</a>
<a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/" class="tag-link-1753 tag-link-position-26" title="227 topics" style="font-size: 15.544910179641pt;">Mathematical</a>
<a href="http://www.geeksforgeeks.org/category/matrix/" class="tag-link-1760 tag-link-position-27" title="76 topics" style="font-size: 11.604790419162pt;">Matrix</a>
<a href="http://www.geeksforgeeks.org/category/multiple-choice-question/" class="tag-link-66 tag-link-position-28" title="95 topics" style="font-size: 12.359281437126pt;">MCQ</a>
<a href="http://www.geeksforgeeks.org/tag/microsoft/" class="tag-link-104 tag-link-position-29" title="119 topics" style="font-size: 13.197604790419pt;">Microsoft</a>
<a href="http://www.geeksforgeeks.org/category/misc/" class="tag-link-4 tag-link-position-30" title="48 topics" style="font-size: 9.9281437125749pt;">Misc</a>
<a href="http://www.geeksforgeeks.org/tag/oracle/" class="tag-link-171 tag-link-position-31" title="42 topics" style="font-size: 9.4251497005988pt;">Oracle</a>
<a href="http://www.geeksforgeeks.org/category/program-output/" class="tag-link-5 tag-link-position-32" title="62 topics" style="font-size: 10.850299401198pt;">Output</a>
<a href="http://www.geeksforgeeks.org/category/algorithm/pattern-searching/" class="tag-link-1749 tag-link-position-33" title="32 topics" style="font-size: 8.502994011976pt;">Pattern Searching</a>
<a href="http://www.geeksforgeeks.org/category/project/" class="tag-link-1767 tag-link-position-34" title="49 topics" style="font-size: 10.011976047904pt;">Project</a>
<a href="http://www.geeksforgeeks.org/category/python/" class="tag-link-1789 tag-link-position-35" title="110 topics" style="font-size: 12.946107784431pt;">Python</a>
<a href="http://www.geeksforgeeks.org/tag/python/" class="tag-link-1770 tag-link-position-36" title="28 topics" style="font-size: 8pt;">Python</a>
<a href="http://www.geeksforgeeks.org/category/algorithm/searching/" class="tag-link-1751 tag-link-position-37" title="48 topics" style="font-size: 9.9281437125749pt;">Searching</a>
<a href="http://www.geeksforgeeks.org/category/algorithm/sorting/" class="tag-link-1752 tag-link-position-38" title="68 topics" style="font-size: 11.185628742515pt;">Sorting</a>
<a href="http://www.geeksforgeeks.org/category/stack/" class="tag-link-1742 tag-link-position-39" title="30 topics" style="font-size: 8.251497005988pt;">Stack</a>
<a href="http://www.geeksforgeeks.org/tag/stl/" class="tag-link-1797 tag-link-position-40" title="37 topics" style="font-size: 9.0059880239521pt;">STL</a>
<a href="http://www.geeksforgeeks.org/category/c-strings/" class="tag-link-7 tag-link-position-41" title="117 topics" style="font-size: 13.11377245509pt;">Strings</a>
<a href="http://www.geeksforgeeks.org/tag/subsequence/" class="tag-link-1908 tag-link-position-42" title="31 topics" style="font-size: 8.4191616766467pt;">subsequence</a>
<a href="http://www.geeksforgeeks.org/category/technical-scripter/" class="tag-link-1788 tag-link-position-43" title="36 topics" style="font-size: 8.9221556886228pt;">Technical Scripter</a>
<a href="http://www.geeksforgeeks.org/category/tree/" class="tag-link-19 tag-link-position-44" title="151 topics" style="font-size: 14.035928143713pt;">Trees</a>
<a href="http://www.geeksforgeeks.org/tag/xor/" class="tag-link-1926 tag-link-position-45" title="43 topics" style="font-size: 9.5089820359281pt;">XOR</a></div>
</aside><aside id="text-38" class="widget widget_text">			<div class="textwidget"><form style="border:1px solid #ccc;padding:3px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(&#39;https://feedburner.google.com/fb/a/mailverify?uri=Geeksforgeeks&#39;, &#39;popupwindow&#39;, &#39;scrollbars=yes,width=550,height=520&#39;);return true"><p>Subscribe and Never Miss an Article</p><input type="text" style="width:140px" placeholder="Email Address" name="email"><input type="hidden" value="Geeksforgeeks" name="uri"><input type="hidden" name="loc" value="en_US">&nbsp;&nbsp;<input type="submit" style="background-color: #4cb96b;" value="Subscribe"></form></div>
		</aside>		</div><!-- #secondary -->
		</div><!-- #main .wrapper -->
	<footer id="colophon" role="contentinfo">
		<div class="site-info">
		<div class="clear"></div>
		</div><!-- .site-info -->
		</footer><!-- #colophon -->
<center>
<div class="iconic-footer">

@geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>  <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp; &nbsp;</a><a href="http://www.geeksforgeeks.org/advertise-with-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; &nbsp; &nbsp;</a>
<a href="http://www.geeksforgeeks.org/privacy-policy/">&nbsp; &nbsp; &nbsp; &nbsp;Privacy Policy</a>
      			</div></center><!-- .site-info -->

				<div class="clear"></div>
</div><!-- #page -->

<script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/shCore.js"></script>
<script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/shBrushCpp.js"></script>
<script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/shBrushJava.js"></script>
<script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/shBrushPython.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://d1hyf4ir1gqw6c.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://d1hyf4ir1gqw6c.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<link rel="stylesheet" id="tabby-print-css" href="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/tabby-print.css" type="text/css" media="all">
<script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/wp-embed.min.js"></script>
<script type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/tabby.js"></script>

<script>jQuery(document).ready(function($) { RESPONSIVEUI.responsiveTabs(); })</script>

<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-12148232-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>  
<script async="" type="text/javascript" src="./GeeksforGeeksDynamic Programming _ Set 10 ( 0-1 Knapsack Problem) - GeeksforGeeks_files/fancybar.js" id="_fancybar_js"></script>



<!-- Dynamic page generated in 0.135 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-12-10 08:02:08 -->

<!-- Compression = gzip --><table cellspacing="0" cellpadding="0" class="gstl_50 gssb_c" style="width: 189px; display: none; top: 82px; position: absolute; left: 665px;"><tbody><tr><td class="gssb_f"></td><td class="gssb_e" style="width: 100%;"></td></tr></tbody></table></body></html>